{
    "compilerOptions": {
        "target": "es2016", // Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'.
        "lib": [ // Specify library files to be included in the compilation.
            "es2017",
            "dom"
        ],
        "types": [ // Type declaration files to be included in compilation.
            "babylonjs",
            "fast-deep-equal",
            "babylonjs-loaders",
            "reflect-metadata",
            "node"
        ],
        "module": "commonjs", // Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'.
        "strict": true,
        "esModuleInterop": true, // Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'
        "sourceMap": false, // Generates corresponding '.map' file.
        "experimentalDecorators": true,
        "emitDecoratorMetadata": true,
        "jsx": "react", // Specify JSX code generation: 'preserve', 'react-native', or 'react'.
        "paths": { // A series of entries which re-map imports to lookup locations relative to the 'baseUrl'.
            "@Constants": [
                "./src/ts/Constants"
            ],
            "@Sass/*": [
                "./src/sass/*"
            ],
            "@WebtoolStarter/*": [
                "./src/ts/WebtoolStarter/*"
            ],
            "@WebtoolEmbedder/*": [
                "./src/ts/WebtoolEmbedder/*"
            ],
            "@Logging/*": [
                "./src/ts/Logging/*"
            ],
            "@ModelLayer/*": [
                "./src/ts/ModelLayer/*"
            ],
            "@Scenes/*": [
                "./src/ts/Scenes/*"
            ],
            "@Startup/*": [
                "./src/ts/Startup/*"
            ],
            "@RenderLoop/*": [
                "./src/ts/RenderLoop/*"
            ],
            "@Utility/*": [
                "./src/ts/Utility/*"
            ],
            "@Systems/*": [
                "./src/ts/Systems/*"
            ],
            "@Events/*": [
                "./src/ts/ModelLayer/Events/*"
            ],
            "@Views/*": [
                "./src/ts/Views/*"
            ],
            "@Requests/*": [
                "./src/ts/Requests/*"
            ],
            "@Inversify/*": [
                "./src/ts/Inversify/*"
            ],
            "@Serialization/*": [
                "./src/ts/Serialization/*"
            ],
            "@DebugTools/*": [
                "./src/ts/DebugTools/*"
            ],
            "@HTML/*": [
                "./src/ts/HTML/*"
            ],
            "@Configs/*": [
                "./src/ts/Configs/*"
            ],
            "@Urls/*": [
                "./src/ts/Urls/*"
            ],
            "@Environment/*": [
                "./src/ts/Environment/*"
            ],
            "@Tests/*": [
                "./tests/*"
            ],
            "@Profiler/*": [
                "./src/ts/Profiler/*"
            ],
            "@DataStructures/*": [
                "./src/ts/DataStructures/*"
            ],
            "@Algorithms/*": [
                "./src/ts/Algorithms/*"
            ],
            "@CommunicationChannelForIFrame/*": [
                "./src/ts/CommunicationChannelForIFrame/*"
            ],
            "@Localization/*": [
                "./src/ts/Localization/*"
            ],
            "@Bootstrapper/*": [
                "./src/ts/Bootstrapper/*"
            ],
            "@Materials/*": [
                "./src/ts/Materials/*"
            ],
            "@Customization/*": [
                "./src/ts/Customization/*"
            ],
            "@Redux/*": [
                "./src/ts/Redux/*"
            ],
            "@Loaders/*": [
                "./src/ts/Loaders/*"
            ],
            "@Effects/*": [
                "./src/ts/Effects/*"
            ]
        },
        // "noUnusedLocals": true, // This is set to true in 'mocha-tests-strict'
        "baseUrl": "."
        // "allowJs": true,                       /* Allow javascript files to be compiled. */
        // "checkJs": true,                       /* Report errors in .js files. */
        // "jsx": "preserve",                     /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
        // "declaration": true,                   /* Generates corresponding '.d.ts' file. */
        // "declarationMap": true,                /* Generates a sourcemap for each corresponding '.d.ts' file. */
        // "outFile": "./",                       /* Concatenate and emit output to single file. */
        // "outDir": "./",                        /* Redirect output structure to the directory. */
        // "rootDir": "./",                       /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
        // "composite": true,                     /* Enable project compilation */
        // "removeComments": true,                /* Do not emit comments to output. */
        // "noEmit": true,                        /* Do not emit outputs. */
        // "importHelpers": true,                 /* Import emit helpers from 'tslib'. */
        // "downlevelIteration": true,            /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
        // "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
        /* Enable all strict type-checking options. */
        // "noImplicitAny": true,                 /* Raise error on expressions and declarations with an implied 'any' type. */
        // "strictNullChecks": true,              /* Enable strict null checks. */
        // "strictFunctionTypes": true,           /* Enable strict checking of function types. */
        // "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. */
        // "noImplicitThis": true,                /* Raise error on 'this' expressions with an implied 'any' type. */
        // "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */
        /* Additional Checks */
        // "noUnusedLocals": true,                /* Report errors on unused locals. */
        // "noUnusedParameters": true,            /* Report errors on unused parameters. */
        // "noImplicitReturns": true,             /* Report error when not all code paths in function return a value. */
        // "noFallthroughCasesInSwitch": true,    /* Report errors for fallthrough cases in switch statement. */
        /* Module Resolution Options */
        // "moduleResolution": "node", /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
        // "baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */
        // "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
        // "typeRoots": [],                       /* List of folders to include type definitions from. */
        // "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
        /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
        // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */
        /* Source Map Options */
        // "sourceRoot": "./",                    /* Specify the location where debugger should locate TypeScript files instead of source locations. */
        // "mapRoot": "./",                       /* Specify the location where debugger should locate map files instead of generated locations. */
        // "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
        // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */
    }
}